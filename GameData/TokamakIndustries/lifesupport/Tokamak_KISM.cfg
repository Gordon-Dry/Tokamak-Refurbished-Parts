@PART[TIinflato1]:NEEDS[Kerbalism,ProfileDefault]:AFTER[Kerbalism]
{
	//ContainerVolume = 90000
	slotCount = 2 //placeholder variable, default for crewed parts
	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = There's not much in the way of port holes for pointing a handeld telescope through and seeing the stars, however, there are a few and they are equi-distant about the circumference of this Inflato part. We just need the station to rotate a little and everyone's happy.
		bonus = panorama
	}
	
	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = Granted the amount of interior space provided by this Inflato Hab, it's quite safe to suggest that a few high-priced things can be stuffed in here for helping the crew fight off known diseases brought on by weightlessness (which may inlude boredom).
		bonus = exercise
	}
}

@PART[TIinflato2]:NEEDS[Kerbalism,ProfileDefault]:AFTER[Kerbalism]
{
	//ContainerVolume = 31850
	slotCount = 2 //placeholder variable, default for crewed parts
	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = There's not much in the way of port holes for pointing a handeld telescope through and seeing the stars, however, there are a few and they are equi-distant about the circumference of this Inflato part. We just need the station to rotate a little and everyone's happy.
		bonus = panorama
	}
}

@PART[TIinflatoFlat]:NEEDS[Kerbalism,ProfileDefault]:AFTER[Kerbalism]
{
	//ContainerVolume = 64638
	slotCount = 3 //placeholder variable, higher due to being a large command pod
	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = There's not much in the way of port holes for pointing a handeld telescope through and seeing the stars, however, there are a few and they are equi-distant about the circumference of this Inflato part. We just need the station to rotate a little and everyone's happy.
		bonus = panorama
	}
}

@PART[TIdryworkshop]:NEEDS[Kerbalism,ProfileDefault]:AFTER[Kerbalism]
{
	@tags ^= :^:_kerbalism :
	// @category = none
	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = This place is big, robust, and smelly (...from the Kerosene traces). Why not put stuff in here so kerbals can happily get smelly? Oh, make sure there's more water and soap somewhere too.
		bonus = exercise
	}
}

@PART[centrifugeSmall]:NEEDS[Kerbalism,ProfileDefault]:AFTER[Kerbalism]
{
	// @category = none
	@CrewCapacity = #$MODULE[DeployableHabitat]/crewCapacityDeployed$
	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = It's spacious, it's beautiful, it's a PorkWork, and it goes round and round, simulating gravity. Isn't that great?!
		bonus = firm-ground
	}

	MODULE
	{
		name = Habitat
		state = disabled
	}

	MODULE
	{
		name = GravityRing
		ec_rate = 2.5
		animBackwards = True
		deploy = centrifugeSmallDeploy
		rotate = center
		deployed = False
		rotateIsTransform = True
	}
}

@PART[TIinflato1]:NEEDS[Kerbalism,ProfileDefault]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Habitat
		inflate = Inflato1Inflate
		state = disabled
		animBackwards = True
		toggle = true
	}
}

@PART[TIinflato2]:NEEDS[Kerbalism,ProfileDefault]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Habitat
		inflate = inflato2inflate
		state = disabled
		animBackwards = True
		toggle = true
	}
}

@PART[TIinflatoFlat]:NEEDS[Kerbalism,ProfileDefault]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Habitat
		inflate = InflatoFlatInflate
		state = disabled
		animBackwards = True
		toggle = true
	}
}

@PART[TIinflato1,TIinflato2,TIinflatoFlat,centrifugeSmall]:NEEDS[Kerbalism,ProfileDefault]:AFTER[Kerbalism]
{
	@tags ^= :^:_kerbalism :
	// @category = none
	@CrewCapacity = #$MODULE[DeployableHabitat]/crewCapacityDeployed$
	
	@MODULE[ProcessController],*
	{
		@capacity = #$/MODULE[DeployableHabitat]/crewCapacityDeployed$
	}

	@MODULE[Configure]
	{
		@slots = #$/slotCount$
	}

	MODULE:NEEDS[FeatureReliability]
	{
	name = Reliability
	type = ProcessController
	title = ECLSS
	redundancy = Life Support
	repair = true // anyone
	mtbf = 72576000
	extra_cost = 0.625
	extra_mass = 0.025
	// Lighter parts last longer - max. ~16 years (~64 years in high quality),
	// heavier parts last shorter - min. ~4 years (~16 years in high quality).
	// Built in reliability modules don't take the whole part's mass into account, but their respective extra_mass.
	// See end of file for finalizing mtbf patches.
	mtbf_nerf = #$/mass$
	@mtbf_nerf *= #$extra_mass$
	@mtbf /= #$mtbf_nerf$
	@mtbf /= 89 // just a good plain Fibonacci number
	@mtbf ^= :\.\d+$:: // remove dot and decimal places if existing 	}
}

@PART[TImunoxShuttle]:NEEDS[Kerbalism,ProfileDefault]:AFTER[Kerbalism]
{
	slotCount = 3 //placeholder variable, higher due to being a large command pod
	@tags ^= :^:_kerbalism :
	// @category = none
	ContainerVolume = 3100
	
	@MODULE[Habitat]
	{
		%volume = 25.727 //intended roughly two thirds of Kerbalism's computed volume
	}
	
	@MODULE[Configure]:HAS[#title[Pod]]
	{
		@slots = 3
		@SETUP[Waste?Processor]
		{
			@RESOURCE[Waste]
			{
				@maxAmount *= 5
			}
		}
		@SETUP[Water?Recycler]
		{
			@RESOURCE[WasteWater]
			{
				@maxAmount *= 5
			}
		}
	}
	
	MODULE
	{
		name = Configure
		title = Supply Container
		slots = 1

		SETUP
		{
			name = Supplies
			desc = Store a balanced supply of <b>Food</b> and <b>Water</b>.

			RESOURCE
			{
				name = Food
				amount = 0.7224224
				maxAmount = 0.7224224
				@amount *= #$../../../ContainerVolume$
				@maxAmount *= #$../../../ContainerVolume$
			}

			RESOURCE
			{
				name = Water
				amount = 0.2775776
				maxAmount = 0.2775776
				@amount *= #$../../../ContainerVolume$
				@maxAmount *= #$../../../ContainerVolume$
			}
		}

		SETUP
		{
			name = Food

			RESOURCE
			{
				name = Food
				amount = 1
				maxAmount = 1
				@amount *= #$../../../ContainerVolume$
				@maxAmount *= #$../../../ContainerVolume$
			}
		}
		
		SETUP
		{
			name = Water
			
			RESOURCE
			{
				name = Water
				amount = 1
				maxAmount = 1
				@amount *= #$../../../ContainerVolume$
				@maxAmount *= #$../../../ContainerVolume$
			}
		}
		
		SETUP
		{
			name = Essentials
			desc = Store a balanced supply of <b>Food, Water</b> and <b>Atmosphere</b>.
			
			RESOURCE
			{
				name = Food
				amount = 0.3612112
				maxAmount = 0.3612112
				@amount *= #$../../../ContainerVolume$
				@maxAmount *= #$../../../ContainerVolume$
			}

			RESOURCE
			{
				name = Water
				amount = 0.1387888
				maxAmount = 0.1387888
				@amount *= #$../../../ContainerVolume$
				@maxAmount *= #$../../../ContainerVolume$
			}
			
			RESOURCE
			{
				name = Oxygen
				amount = 404.61
				maxAmount = 404.61
				@amount *= #$../../../ContainerVolume$
				@maxAmount *= #$../../../ContainerVolume$
			}
			
			RESOURCE
			{
				name = Nitrogen
				amount = 329.7
				maxAmount = 329.7
				@amount *= #$../../../ContainerVolume$
				@maxAmount *= #$../../../ContainerVolume$
			}
		
		}

	}
}

@PART[TIinflato1,TIinflato2,TIinflatoFlat,TIdryworkshop,centrifugeSmall,TImunoxShuttle]:NEEDS[Kerbalism,ProfileDefault]:AFTER[zzzKerbalism]
{
	-slotCount = delete
	-MODULE[ModuleAnimationGroup] {} // Functionality is replaced by ModuleHabitat
	-MODULE[DeployableHabitat] {} // Functionality is replaced by ModuleHabitat
	-MODULE[Centrifuge] {} // Functionality is replaced by ModuleHabitat
}
